{
  "header": {
    "data": {
      "order": [
        "Globals",
        "Interval",
        "Connected",
        "Disconnected",
        "Setup"
      ],
      "Globals": {
        "name": "Globals",
        "func": "#include \"callbacks.h\"",
        "code": "\nunsigned char returnString[64];\nint count = 0;\n",
        "close": "//END"
      },
      "Interval": {
        "name": "Interval",
        "func": "\nvoid interval() {",
        "code": "    count++;",
        "close": "}"
      },
      "Connected": {
        "name": "Connected",
        "func": "\nvoid connected() {",
        "code": "",
        "close": "}"
      },
      "Disconnected": {
        "name": "Disconnected",
        "func": "\nvoid disconnected() {",
        "code": "",
        "close": "}"
      },
      "Setup": {
        "name": "Setup",
        "func": "\nvoid setup() {",
        "code": "    AIR_GPIO_Init();\n\tAIR_UART_Init();\n\tAIR_I2C_Init();\n\tAIR_SPI_Init();\n\tBUZZER_Init();\n\tAIR_POWER_Init();\n    AIR_POWER_SetMode(AIR_POWER_NOSLEEP);",
        "close": "}"
      }
    },
    "boardConfiguration": {
      "ble": {
        "name": "Bluetooth Low Energy",
        "file": "ble_config.h",
        "values": {
          "localName": {
            "name": "Local Name",
            "input": "TextField",
            "prefix": "#define BLE_LOCAL_NAME \"",
            "value": "Express",
            "suffix": "\"",
            "regex": "^[a-zA-Z0-9_.]*$"
          },
          "version": {
            "name": "Version",
            "input": "TextField",
            "prefix": "#define BLE_VERSION \"",
            "value": "1.00",
            "suffix": "\"",
            "regex": "^[a-zA-Z0-9_.]*$"
          },
          "pairing": {
            "name": "Pairing",
            "input": "Combo",
            "prefix": "#define ",
            "options": [
              "BLE_PAIRING_NONE",
              "BLE_PAIRING_PASSKEY",
              "BLE_PAIRING_OOB"
            ],
            "value": "BLE_PAIRING_NONE",
            "regex": "^[a-zA-Z0-9_.]*$"
          },
          "txPowerLevel": {
            "name": "TX Power Level (dbm)",
            "input": "TextField",
            "prefix": "#define BLE_TX_POWER_LEVEL ",
            "value": "4",
            "regex": "^[0-9]*$"
          },
          "intervalFineTimer": {
            "name": "Interval Timer Length (ms)",
            "input": "TextField",
            "prefix": "#define BLE_INTERVAL_FINE_TIMER ",
            "value": "1000",
            "regex": "^[0-9]*$"
          }
        }
      },
      "uart": {
        "name": "AIR UART Driver",
        "file": "uart_config.h",
        "values": {
          "rxBuffer": {
            "name": "RX Circular Buffer size",
            "input": "TextField",
            "prefix": "#define AIR_UART_RX_CIRCULAR_BUFFER_SIZE ",
            "value": "128",
            "regex": "^[0-9]*$"
          },
          "txBuffer": {
            "name": "TX Circular Buffer size",
            "input": "TextField",
            "prefix": "#define AIR_UART_TX_CIRCULAR_BUFFER_SIZE ",
            "value": "128",
            "regex": "^[0-9]*$"
          },
          "buad": {
            "name": "Baudrate",
            "input": "Combo",
            "prefix": "#define ",
            "options": [
              "AIR_UART_BAUD_115200",
              "AIR_UART_BAUD_57600",
              "AIR_UART_BAUD_9600"
            ],
            "value": "AIR_UART_BAUD_115200",
            "regex": "^[a-zA-Z0-9_.]*$"
          },
          "txPin": {
            "name": "TX Pin",
            "input": "Combo",
            "prefix": "#define AIR_UART_TX_PIN ",
            "options": [
              "32"
            ],
            "value": "32",
            "regex": "^[a-zA-Z0-9_.]*$"
          },
          "rxPin": {
            "name": "RX Pin",
            "input": "Combo",
            "prefix": "#define AIR_UART_RX_PIN ",
            "options": [
              "33"
            ],
            "value": "33",
            "regex": "^[a-zA-Z0-9_.]*$"
          },
          "rtsPin": {
            "name": "RTS Pin",
            "input": "Combo",
            "prefix": "#define AIR_UART_RTS_PIN ",
            "options": [
              "1"
            ],
            "value": "1",
            "regex": "^[a-zA-Z0-9_.]*$"
          },
          "ctsPin": {
            "name": "CTS Pin",
            "input": "Combo",
            "prefix": "#define AIR_UART_CTS_PIN ",
            "options": [
              "3"
            ],
            "value": "3",
            "regex": "^[a-zA-Z0-9_.]*$"
          }
        }
      }
    },
    "meta": {
      "version": "1.0.10-1",
      "layoutGrid": false,
      "layoutSnapping": false,
      "layoutSnappingSize": 10,
      "language": "en",
      "enableTooltips": true,
      "enableAutoSave": true,
      "enableBuildSave": false,
      "description": null,
      "project_uuid": null,
      "tokensEnabled": false,
      "codeAssist": false,
      "highlightLine": false,
      "editorTheme": "Default",
      "projectType": "bcm920737",
      "name": "ExpressionExample"
    },
    "type": "Header",
    "currentLayoutName": "Default"
  },
  "layouts": {
    "Default": {
      "name": "Default (768x1024)",
      "width": 768,
      "height": 1024,
      "orientation": "portrait",
      "devicename": ".*",
      "platform": ".*",
      "version": ".*",
      "elements": {
        "fromExpression": {
          "x": 156,
          "y": 191,
          "width": 163,
          "height": 34
        },
        "Label4": {
          "x": 28,
          "y": 71,
          "width": 289,
          "height": 34
        },
        "toExpression": {
          "x": 156,
          "y": 143,
          "width": 163,
          "height": 34
        },
        "Label7": {
          "x": 28,
          "y": 143,
          "width": 114,
          "height": 34
        },
        "Label8": {
          "x": 28,
          "y": 191,
          "width": 114,
          "height": 34
        }
      }
    }
  },
  "elements": {
    "getCount": {
      "type": "Function",
      "properties": {
        "code": "                            \n\tsprintf(returnString, \"\\\"%d\\\"\", count);\n\treturn returnString;\n\t"
      },
      "triggers": {
        "valueReturned": [
          {
            "sourceTrigger": "valueReturned",
            "sourceValue": "getValue",
            "targetValue": "setValue",
            "sourceStaticValue": "",
            "arguments": {
              "mapping": {
                "value": "JSON.stringify(value)"
              },
              "targetOrder": [
                "value"
              ],
              "sourceOrder": [
                "value"
              ]
            },
            "targetName": "toExpression"
          },
          {
            "sourceTrigger": "valueReturned",
            "sourceValue": "getValue",
            "targetValue": "addValue",
            "sourceStaticValue": "",
            "arguments": {
              "mapping": {
                "key": "\"count\"",
                "value": "value"
              },
              "targetOrder": [
                "key",
                "value"
              ],
              "sourceOrder": [
                "value"
              ]
            },
            "targetName": "Expression9"
          },
          {
            "sourceTrigger": "valueReturned",
            "sourceValue": "Static",
            "targetValue": "evaluate",
            "sourceStaticValue": "",
            "arguments": {
              "mapping": {
                "values": ""
              },
              "targetOrder": [
                "values"
              ],
              "sourceOrder": []
            },
            "targetName": "Expression9"
          }
        ]
      },
      "zindex": 1,
      "designer": {
        "x": 170,
        "y": 188
      }
    },
    "fromExpression": {
      "type": "Label",
      "properties": {
        "label": "",
        "enabled": true,
        "visible": true,
        "font": "14px Arial",
        "color": "Black"
      },
      "triggers": {},
      "zindex": 2,
      "designer": {
        "x": 447,
        "y": 188
      }
    },
    "Label4": {
      "type": "Label",
      "properties": {
        "label": "Expression Example",
        "enabled": true,
        "visible": true,
        "font": "14px Arial",
        "color": "Black"
      },
      "triggers": {},
      "zindex": 3,
      "designer": {
        "x": 14,
        "y": 71
      }
    },
    "Task5": {
      "type": "Task",
      "properties": {
        "runOnStart": true,
        "runIn": "2000",
        "runEvery": "1000"
      },
      "triggers": {
        "task": [
          {
            "sourceTrigger": "task",
            "sourceValue": "Static",
            "targetValue": "execute",
            "sourceStaticValue": "",
            "arguments": {
              "mapping": {
                "value": ""
              },
              "targetOrder": [
                "value"
              ],
              "sourceOrder": []
            },
            "targetName": "getCount"
          }
        ]
      },
      "zindex": 4,
      "designer": {
        "x": 24,
        "y": 188
      }
    },
    "toExpression": {
      "type": "Label",
      "properties": {
        "label": "",
        "enabled": true,
        "visible": true,
        "font": "14px Arial",
        "color": "Black"
      },
      "triggers": {},
      "zindex": 5,
      "designer": {
        "x": 335,
        "y": 111
      }
    },
    "Label7": {
      "type": "Label",
      "properties": {
        "label": "To expression:",
        "enabled": true,
        "visible": true,
        "font": "14px Arial",
        "color": "Black"
      },
      "triggers": {},
      "zindex": 6,
      "designer": {
        "x": 31,
        "y": 86
      }
    },
    "Label8": {
      "type": "Label",
      "properties": {
        "label": "From expression:",
        "enabled": true,
        "visible": true,
        "font": "14px Arial",
        "color": "Black"
      },
      "triggers": {},
      "zindex": 7,
      "designer": {
        "x": 46,
        "y": 96
      }
    },
    "Expression9": {
      "type": "Expression",
      "properties": {
        "expression": "values.count % 2 == 0"
      },
      "triggers": {
        "evaluated": [
          {
            "sourceTrigger": "evaluated",
            "sourceValue": "getValue",
            "targetValue": "setValue",
            "sourceStaticValue": "",
            "arguments": {
              "mapping": {
                "value": "value ? \"Even\" : \"Odd\""
              },
              "targetOrder": [
                "value"
              ],
              "sourceOrder": [
                "value"
              ]
            },
            "targetName": "fromExpression"
          }
        ]
      },
      "zindex": 8,
      "designer": {
        "x": 334,
        "y": 188
      }
    }
  }
}