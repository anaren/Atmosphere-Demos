{
  "header": {
    "data": {
      "order": [
        "Globals",
        "Interval",
        "Connected",
        "Disconnected",
        "Setup"
      ],
      "Globals": {
        "close": "//END",
        "code": "",
        "name": "Globals",
        "func": "#include \"callbacks.h\""
      },
      "Interval": {
        "close": "}",
        "code": "",
        "name": "Interval",
        "func": "\nvoid interval() {"
      },
      "Connected": {
        "close": "}",
        "code": "",
        "name": "Connected",
        "func": "\nvoid connected() {"
      },
      "Disconnected": {
        "close": "}",
        "code": "",
        "name": "Disconnected",
        "func": "\nvoid disconnected() {"
      },
      "Setup": {
        "close": "}",
        "code": "\tAIR_GPIO_Init();\n\tAIR_POWER_Init();\n\t//AIR_UART_Init();\n\t//AIR_SPI_Init();\n\t//BUZZER_Init();\n\tAIR_POWER_SetMode(AIR_POWER_NOSLEEP);\n\t\n\tAIR_GPIO_SetMode(13, AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL);\n\tAIR_GPIO_SetMode(14, AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL);\n\tAIR_GPIO_SetMode(26, AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL);\n\tAIR_GPIO_SetMode(27, AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL);\n\t",
        "name": "Setup",
        "func": "\nvoid setup() {"
      }
    },
    "boardConfiguration": {
      "ble": {
        "values": {
          "txPowerLevel": {
            "regex": "^[0-9]*$",
            "input": "TextField",
            "prefix": "#define BLE_TX_POWER_LEVEL ",
            "name": "TX Power Level (dbm)",
            "value": "4"
          },
          "pairing": {
            "regex": "^[a-zA-Z0-9_.]*$",
            "name": "Pairing",
            "value": "BLE_PAIRING_NONE",
            "prefix": "#define ",
            "input": "Combo",
            "options": [
              "BLE_PAIRING_NONE",
              "BLE_PAIRING_PASSKEY",
              "BLE_PAIRING_OOB"
            ]
          },
          "intervalFineTimer": {
            "regex": "^[0-9]*$",
            "input": "TextField",
            "prefix": "#define BLE_INTERVAL_FINE_TIMER ",
            "name": "Interval Timer Length (ms)",
            "value": "1000"
          },
          "version": {
            "regex": "^[a-zA-Z0-9_.]*$",
            "name": "Version",
            "value": "1.00",
            "prefix": "#define BLE_VERSION \"",
            "input": "TextField",
            "suffix": "\""
          },
          "localName": {
            "regex": "^[a-zA-Z0-9_.]*$",
            "name": "Local Name",
            "value": "robot",
            "prefix": "#define BLE_LOCAL_NAME \"",
            "input": "TextField",
            "suffix": "\""
          },
          "powersave": {
            "regex": "^[a-zA-Z0-9_.]*$",
            "name": "Power Saving",
            "value": "BLE_POWERSAVE_OFF",
            "prefix": "#define ",
            "input": "Combo",
            "options": [
              "BLE_POWERSAVE_OFF",
              "BLE_POWERSAVE"
            ]
          }
        },
        "name": "Bluetooth Low Energy",
        "file": "ble_config.h"
      },
      "power": {
        "name": "Power Driver",
        "file": "power_config.h",
        "values": {
          "external_osc": {
            "name": "External Oscillator",
            "input": "Combo",
            "prefix": "#define AIR_POWER_",
            "options": [
              "EXTERNAL_32KHZ_OSC",
              "INTERNAL_OSC"
            ],
            "value": "INTERNAL_OSC",
            "regex": "^[a-zA-Z0-9_.]*$"
          }
        }
      },
      "gpio": {
        "name": "GPIO Driver",
        "file": "gpio_config.h",
        "values": {
          "buad": {
            "name": "ADC Sample Frequency",
            "input": "Combo",
            "prefix": "#define AIR_ADC_SAMPLE_FREQUENCY ",
            "options": [
              "ADC_SAMPLE_FREQUENCY_LOW",
              "ADC_SAMPLE_FREQUENCY_MEDIUM_LOW",
              "ADC_SAMPLE_FREQUENCY_MEDIUM",
              "ADC_SAMPLE_FREQUENCY_MEDIUM_HIGH",
              "ADC_SAMPLE_FREQUENCY_HIGH"
            ],
            "value": "ADC_SAMPLE_FREQUENCY_LOW",
            "regex": "^[a-zA-Z0-9_.]*$"
          }
        }
      },
      "uart": {
        "values": {
          "rtsPin": {
            "regex": "^[a-zA-Z0-9_.]*$",
            "name": "RTS Pin",
            "value": "1",
            "prefix": "#define AIR_UART_RTS_PIN ",
            "input": "Combo",
            "options": [
              "1"
            ]
          },
          "buad": {
            "regex": "^[a-zA-Z0-9_.]*$",
            "name": "Baudrate",
            "value": "AIR_UART_BAUD_115200",
            "prefix": "#define ",
            "input": "Combo",
            "options": [
              "AIR_UART_BAUD_115200",
              "AIR_UART_BAUD_57600",
              "AIR_UART_BAUD_9600"
            ]
          },
          "rxBuffer": {
            "regex": "^[0-9]*$",
            "input": "TextField",
            "prefix": "#define AIR_UART_RX_CIRCULAR_BUFFER_SIZE ",
            "name": "RX Circular Buffer size",
            "value": "128"
          },
          "txBuffer": {
            "regex": "^[0-9]*$",
            "input": "TextField",
            "prefix": "#define AIR_UART_TX_CIRCULAR_BUFFER_SIZE ",
            "name": "TX Circular Buffer size",
            "value": "128"
          },
          "txPin": {
            "regex": "^[a-zA-Z0-9_.]*$",
            "name": "TX Pin",
            "value": "32",
            "prefix": "#define AIR_UART_TX_PIN ",
            "input": "Combo",
            "options": [
              "32"
            ]
          },
          "rxPin": {
            "regex": "^[a-zA-Z0-9_.]*$",
            "name": "RX Pin",
            "value": "33",
            "prefix": "#define AIR_UART_RX_PIN ",
            "input": "Combo",
            "options": [
              "33"
            ]
          },
          "ctsPin": {
            "regex": "^[a-zA-Z0-9_.]*$",
            "name": "CTS Pin",
            "value": "3",
            "prefix": "#define AIR_UART_CTS_PIN ",
            "input": "Combo",
            "options": [
              "3"
            ]
          }
        },
        "name": "AIR UART Driver",
        "file": "uart_config.h"
      }
    },
    "meta": {
      "version": "origin/kieron",
      "layoutGrid": false,
      "layoutSnapping": false,
      "layoutSnappingSize": 10,
      "cloudLayoutGrid": false,
      "cloudLayoutSnapping": false,
      "cloudLayoutSnappingSize": 10,
      "language": "en",
      "enableTooltips": true,
      "enableAutoSave": true,
      "enableBuildSave": false,
      "description": null,
      "project_uuid": null,
      "tokensEnabled": false,
      "codeAssist": false,
      "highlightLine": false,
      "editorTheme": "Default",
      "editorFontSize": 12,
      "customEmbeddedElementLibraries": {},
      "theme": {
        "bg1": "#DCEBF9",
        "bg2": "#DCEBF9"
      },
      "projectType": "bcm20737",
      "name": "Robot"
    },
    "type": "Header",
    "currentLayoutName": "iPhone4",
    "currentCloudLayoutName": "Default"
  },
  "layouts": {
    "Default": {
      "devicename": ".*",
      "elements": {
        "Button10": {
          "y": 138,
          "x": 231.5,
          "height": 84,
          "width": 305
        },
        "Button2": {
          "y": 236,
          "x": 231,
          "height": 128,
          "width": 146
        },
        "Button1": {
          "y": 376,
          "x": 391,
          "height": 129,
          "width": 146
        },
        "leftBackButton": {
          "y": 378,
          "x": 231,
          "height": 128,
          "width": 146
        },
        "Button4": {
          "y": 236,
          "x": 391,
          "height": 128,
          "width": 146
        },
        "Button9": {
          "y": 519,
          "x": 230.5,
          "height": 84,
          "width": 307
        }
      },
      "orientation": "portrait",
      "platform": ".*",
      "height": 1024,
      "width": 768,
      "version": ".*",
      "name": "Default (768x1024)"
    },
    "lgOptimusGPro": {
      "devicename": ".*",
      "elements": {
        "Button1": {
          "x": 187,
          "y": 306,
          "width": 146,
          "height": 129
        },
        "Button2": {
          "x": 27,
          "y": 164,
          "width": 146,
          "height": 128
        },
        "leftBackButton": {
          "x": 27,
          "y": 306,
          "width": 146,
          "height": 128
        },
        "Button4": {
          "x": 187,
          "y": 164,
          "width": 146,
          "height": 128
        },
        "Button9": {
          "x": 26.5,
          "y": 448,
          "width": 307,
          "height": 84
        },
        "Button10": {
          "x": 27.5,
          "y": 66,
          "width": 305,
          "height": 84
        }
      },
      "orientation": "portrait",
      "platform": ".*",
      "height": 640,
      "width": 360,
      "version": ".*",
      "name": "LG Optimus G Pro"
    },
    "iPhone4": {
      "devicename": ".*",
      "elements": {
        "Button1": {
          "x": 174,
          "y": 257,
          "width": 132,
          "height": 115
        },
        "Button2": {
          "x": 15,
          "y": 119,
          "width": 132,
          "height": 114
        },
        "leftBackButton": {
          "x": 14,
          "y": 258,
          "width": 132,
          "height": 114
        },
        "Button4": {
          "x": 174,
          "y": 119,
          "width": 132,
          "height": 114
        },
        "Button9": {
          "x": 13.5,
          "y": 400,
          "width": 293,
          "height": 70
        },
        "Button10": {
          "x": 14.5,
          "y": 18,
          "width": 291,
          "height": 70
        }
      },
      "orientation": "portrait",
      "platform": "iOS",
      "height": 480,
      "width": 320,
      "version": ".*",
      "name": "iPhone 4/4S"
    },
    "nexus7": {
      "devicename": ".*",
      "elements": {
        "Button1": {
          "x": 307,
          "y": 370,
          "width": 146,
          "height": 129
        },
        "Button2": {
          "x": 147,
          "y": 228,
          "width": 146,
          "height": 128
        },
        "leftBackButton": {
          "x": 147,
          "y": 370,
          "width": 146,
          "height": 128
        },
        "Button4": {
          "x": 307,
          "y": 228,
          "width": 146,
          "height": 128
        },
        "Button9": {
          "x": 146.5,
          "y": 512,
          "width": 307,
          "height": 84
        },
        "Button10": {
          "x": 147.5,
          "y": 130,
          "width": 305,
          "height": 84
        }
      },
      "orientation": "portrait",
      "platform": ".*",
      "height": 912,
      "width": 600,
      "version": ".*",
      "name": "Nexus 7 (2013)"
    }
  },
  "cloudLayouts": {
    "Default": {
      "name": "Default (768x1024)",
      "width": 768,
      "height": 1024,
      "orientation": "portrait",
      "devicename": ".*",
      "platform": "",
      "version": ".*",
      "elements": {}
    }
  },
  "elements": {
    "Button1": {
      "type": "Button",
      "properties": {
        "visible": true,
        "enabled": true,
        "label": "Right Back",
        "border": "plain",
        "topColor": "rgb(250, 250, 250)",
        "bottomColor": "rgb(234, 234, 234)",
        "pressedTopColor": "rgb(255, 255, 255)",
        "pressedBottomColor": "rgb(255, 255, 255)",
        "overTopColor": "rgb(234, 234, 234)",
        "overBottomColor": "rgb(214, 214, 214)",
        "disabledTopColor": "rgb(211, 211, 211)",
        "disabledBottomColor": "rgb(211, 211, 211)",
        "elementType": "element"
      },
      "triggers": {
        "mouseReleased": [
          {
            "sourceValue": "Static",
            "targetName": "backRight",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "0"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mouseReleased"
          }
        ],
        "mousePressed": [
          {
            "sourceValue": "Static",
            "targetName": "backRight",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "1"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mousePressed"
          }
        ]
      },
      "zindex": 1,
      "designer": {
        "x": 46,
        "y": 466
      }
    },
    "Button2": {
      "type": "Button",
      "properties": {
        "visible": true,
        "enabled": true,
        "label": "Left Forward",
        "border": "plain",
        "topColor": "rgb(250, 250, 250)",
        "bottomColor": "rgb(234, 234, 234)",
        "pressedTopColor": "rgb(255, 255, 255)",
        "pressedBottomColor": "rgb(255, 255, 255)",
        "overTopColor": "rgb(234, 234, 234)",
        "overBottomColor": "rgb(214, 214, 214)",
        "disabledTopColor": "rgb(211, 211, 211)",
        "disabledBottomColor": "rgb(211, 211, 211)",
        "elementType": "element"
      },
      "triggers": {
        "mouseReleased": [
          {
            "sourceValue": "Static",
            "targetName": "forwardLeft",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "0"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mouseReleased"
          }
        ],
        "mousePressed": [
          {
            "sourceValue": "Static",
            "targetName": "forwardLeft",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "1"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mousePressed"
          }
        ]
      },
      "zindex": 2,
      "designer": {
        "x": 43,
        "y": 217
      }
    },
    "leftBackButton": {
      "type": "Button",
      "properties": {
        "visible": true,
        "enabled": true,
        "label": "Left Back",
        "border": "plain",
        "topColor": "rgb(250, 250, 250)",
        "bottomColor": "rgb(234, 234, 234)",
        "pressedTopColor": "rgb(255, 255, 255)",
        "pressedBottomColor": "rgb(255, 255, 255)",
        "overTopColor": "rgb(234, 234, 234)",
        "overBottomColor": "rgb(214, 214, 214)",
        "disabledTopColor": "rgb(211, 211, 211)",
        "disabledBottomColor": "rgb(211, 211, 211)",
        "elementType": "element"
      },
      "triggers": {
        "mouseReleased": [
          {
            "sourceValue": "Static",
            "targetName": "backLeft",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "0"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mouseReleased"
          }
        ],
        "mousePressed": [
          {
            "sourceValue": "Static",
            "targetName": "backLeft",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "1"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mousePressed"
          }
        ]
      },
      "zindex": 3,
      "designer": {
        "x": 39,
        "y": 304
      }
    },
    "Button4": {
      "type": "Button",
      "properties": {
        "visible": true,
        "enabled": true,
        "label": "Right Forward",
        "border": "plain",
        "topColor": "rgb(250, 250, 250)",
        "bottomColor": "rgb(234, 234, 234)",
        "pressedTopColor": "rgb(255, 255, 255)",
        "pressedBottomColor": "rgb(255, 255, 255)",
        "overTopColor": "rgb(234, 234, 234)",
        "overBottomColor": "rgb(214, 214, 214)",
        "disabledTopColor": "rgb(211, 211, 211)",
        "disabledBottomColor": "rgb(211, 211, 211)",
        "elementType": "element"
      },
      "triggers": {
        "mouseReleased": [
          {
            "sourceValue": "Static",
            "targetName": "forwardRight",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "0"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mouseReleased"
          }
        ],
        "mousePressed": [
          {
            "sourceValue": "Static",
            "targetName": "forwardRight",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "1"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mousePressed"
          }
        ]
      },
      "zindex": 4,
      "designer": {
        "x": 40,
        "y": 387
      }
    },
    "forwardLeft": {
      "type": "GPIOWrite",
      "properties": {
        "code": "\n\t\n\tif(AIR_GPIO_GetMode(26) != AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL)\n\t{\n\t\tAIR_GPIO_SetMode(26, AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL);\n\t}\n\n\tif(data)\n\t{\n\t\tAIR_GPIO_Write(26, 1);\n\t}\n\t\n\telse\n\t{\n\t\tAIR_GPIO_Write(26, 0);\n\t}\n\t\n\treturn;\n\t",
        "pin": "27",
        "permission": "public",
        "length": "128",
        "returnType": "void",
        "inputType": "bool",
        "elementType": "element"
      },
      "triggers": {},
      "zindex": 5,
      "designer": {
        "x": 235,
        "y": 220
      }
    },
    "backLeft": {
      "type": "GPIOWrite",
      "properties": {
        "code": "\n\t\n\tif(AIR_GPIO_GetMode(27) != AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL)\n\t{\n\t\tAIR_GPIO_SetMode(27, AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL);\n\t}\n\n\tif(data)\n\t{\n\t\tAIR_GPIO_Write(27, 1);\n\t}\n\t\n\telse\n\t{\n\t\tAIR_GPIO_Write(27, 0);\n\t}\n\t\n\treturn;\n\t",
        "pin": "26",
        "permission": "public",
        "length": "128",
        "returnType": "void",
        "inputType": "bool",
        "elementType": "element"
      },
      "triggers": {},
      "zindex": 6,
      "designer": {
        "x": 244,
        "y": 314
      }
    },
    "forwardRight": {
      "type": "GPIOWrite",
      "properties": {
        "code": "\n\t\n\tif(AIR_GPIO_GetMode(13) != AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL)\n\t{\n\t\tAIR_GPIO_SetMode(13, AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL);\n\t}\n\n\tif(data)\n\t{\n\t\tAIR_GPIO_Write(13, 1);\n\t}\n\t\n\telse\n\t{\n\t\tAIR_GPIO_Write(13, 0);\n\t}\n\t\n\treturn;\n\t",
        "pin": "14",
        "permission": "public",
        "length": "128",
        "returnType": "void",
        "inputType": "bool",
        "elementType": "element"
      },
      "triggers": {},
      "zindex": 7,
      "designer": {
        "x": 247,
        "y": 397
      }
    },
    "backRight": {
      "type": "GPIOWrite",
      "properties": {
        "code": "\n\t\n\tif(AIR_GPIO_GetMode(14) != AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL)\n\t{\n\t\tAIR_GPIO_SetMode(14, AIR_GPIO_OUTPUT_OPEN_DRAIN_NO_PULL);\n\t}\n\n\tif(data)\n\t{\n\t\tAIR_GPIO_Write(14, 1);\n\t}\n\t\n\telse\n\t{\n\t\tAIR_GPIO_Write(14, 0);\n\t}\n\t\n\treturn;\n\t",
        "pin": "13",
        "permission": "public",
        "length": "128",
        "returnType": "void",
        "inputType": "bool",
        "elementType": "element"
      },
      "triggers": {},
      "zindex": 8,
      "designer": {
        "x": 246,
        "y": 480
      }
    },
    "Button9": {
      "type": "Button",
      "properties": {
        "visible": true,
        "enabled": true,
        "label": "Backward",
        "border": "plain",
        "topColor": "rgb(250, 250, 250)",
        "bottomColor": "rgb(234, 234, 234)",
        "pressedTopColor": "rgb(255, 255, 255)",
        "pressedBottomColor": "rgb(255, 255, 255)",
        "overTopColor": "rgb(234, 234, 234)",
        "overBottomColor": "rgb(214, 214, 214)",
        "disabledTopColor": "rgb(211, 211, 211)",
        "disabledBottomColor": "rgb(211, 211, 211)",
        "elementType": "element"
      },
      "triggers": {
        "mouseReleased": [
          {
            "sourceValue": "Static",
            "targetName": "backward",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "0"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mouseReleased"
          }
        ],
        "mousePressed": [
          {
            "sourceValue": "Static",
            "targetName": "backward",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "1"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mousePressed"
          }
        ]
      },
      "zindex": 9,
      "designer": {
        "x": 39,
        "y": 120
      }
    },
    "Button10": {
      "type": "Button",
      "properties": {
        "visible": true,
        "enabled": true,
        "label": "Forward",
        "border": "plain",
        "topColor": "rgb(250, 250, 250)",
        "bottomColor": "rgb(234, 234, 234)",
        "pressedTopColor": "rgb(255, 255, 255)",
        "pressedBottomColor": "rgb(255, 255, 255)",
        "overTopColor": "rgb(234, 234, 234)",
        "overBottomColor": "rgb(214, 214, 214)",
        "disabledTopColor": "rgb(211, 211, 211)",
        "disabledBottomColor": "rgb(211, 211, 211)",
        "elementType": "element"
      },
      "triggers": {
        "mouseReleased": [
          {
            "sourceValue": "Static",
            "targetName": "forward",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "0"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mouseReleased"
          }
        ],
        "mousePressed": [
          {
            "sourceValue": "Static",
            "targetName": "forward",
            "arguments": {
              "targetOrder": [
                "value"
              ],
              "mapping": {
                "value": "1"
              },
              "sourceOrder": []
            },
            "sourceStaticValue": "",
            "targetValue": "execute",
            "sourceTrigger": "mousePressed"
          }
        ]
      },
      "zindex": 10,
      "designer": {
        "x": 56,
        "y": 20
      }
    },
    "backward": {
      "type": "Function",
      "properties": {
        "returnType": "void",
        "length": "128",
        "code": "    backLeft(data);\n    backRight(data);",
        "inputType": "bool",
        "permission": "public",
        "elementType": "element"
      },
      "triggers": {},
      "zindex": 11,
      "designer": {
        "x": 239,
        "y": 129
      }
    },
    "forward": {
      "type": "Function",
      "properties": {
        "returnType": "void",
        "length": "128",
        "code": "    forwardLeft(data);\n    forwardRight(data);",
        "inputType": "bool",
        "permission": "public",
        "elementType": "element"
      },
      "triggers": {},
      "zindex": 12,
      "designer": {
        "x": 236,
        "y": 36
      }
    }
  },
  "cloudElements": {}
}